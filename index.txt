<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Send a Message</title>

  <link href="https://fonts.googleapis.com/css2?family=Outfit:wght@300;500;700&display=swap" rel="stylesheet"/>
  <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-app-compat.js"></script>
  <script src="https://www.gstatic.com/firebasejs/9.6.1/firebase-firestore-compat.js"></script>

  <style>
    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      padding: 0;
      font-family: 'Outfit', sans-serif;
      background: linear-gradient(135deg, #ff9a9e, #fad0c4);
      height: 100vh;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .card {
      background: rgba(255, 255, 255, 0.15);
      backdrop-filter: blur(12px);
      -webkit-backdrop-filter: blur(12px);
      border-radius: 25px;
      padding: 30px 25px;
      width: 100%;
      max-width: 400px;
      color: #fff;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    h1 {
      margin-bottom: 20px;
      font-weight: 500;
      font-size: 22px;
      text-align: center;
    }

    input {
      width: 100%;
      padding: 16px;
      border: none;
      border-radius: 14px;
      font-size: 16px;
      margin-bottom: 16px;
    }

    button {
      background-color: #fff;
      color: #ff69b4;
      border: none;
      padding: 14px 26px;
      border-radius: 16px;
      font-size: 16px;
      font-weight: bold;
      cursor: pointer;
      transition: all 0.3s ease;
      margin-top: 10px;
    }

    button:hover {
      background-color: #ffe4ec;
      transform: scale(1.05);
    }

    #emojiPicker {
      margin-bottom: 16px;
      text-align: center;
      width: 100%;
    }

    #emojiPicker span {
      display: block;
      margin-bottom: 6px;
      font-weight: 500;
    }

    #emojiPicker div {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
    }

    #emojiPicker div span {
      font-size: 26px;
      cursor: pointer;
      opacity: 0.5;
      transition: all 0.2s ease;
    }

    #emojiPicker div span.selected {
      opacity: 1;
      transform: scale(1.2);
    }

    #sentMsg {
      margin-top: 12px;
      font-size: 14px;
      color: #fff;
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    #sentMsg.visible {
      opacity: 1;
    }

    #historyContainer {
      flex: 1;
      width: 100%;
      max-width: 420px;
      overflow-y: auto;
      padding: 0 20px 30px;
      margin-top: 20px;
    }

    #history {
      font-size: 15px;
      color: #fff;
    }

    #history h3 {
      margin-bottom: 10px;
      font-size: 16px;
    }

    #history div {
      margin-bottom: 16px;
    }

    .butterfly {
      position: fixed;
      pointer-events: none;
      opacity: 0;
      z-index: 1;
      transform: translateY(0);
    }

    @keyframes fadeFloat {
      0% { opacity: 0; transform: translateY(20px) scale(0.9) rotate(0deg); }
      50% { opacity: 1; transform: translateY(-10px) scale(1.05) rotate(5deg); }
      100% { opacity: 0; transform: translateY(-100px) scale(0.9) rotate(-15deg); }
    }
  </style>

  <script>
    const firebaseConfig = {
      apiKey: "AIzaSyCgMZzUAymYd0wO4aPHmETgsbXp1JDRAXI",
      authDomain: "chayenne-rajji.firebaseapp.com",
      projectId: "chayenne-rajji",
      storageBucket: "chayenne-rajji.firebasestorage.app",
      messagingSenderId: "862786577949",
      appId: "1:862786577949:web:c8c049b331b8c86f0908f4",
      measurementId: "G-XY00XVRJSS"
    };

    firebase.initializeApp(firebaseConfig);
    const db = firebase.firestore();

    let selectedEmoji = "üßú‚Äç‚ôÄÔ∏è";

    async function sendMessage() {
      const input = document.getElementById('msgInput');
      const sentMsg = document.getElementById('sentMsg');
      const text = input.value.trim();
      if (!text) return;

      try {
        const historyRef = await db.collection('messages_chayenne').add({
          message: text,
          emoji: selectedEmoji,
          time: firebase.firestore.FieldValue.serverTimestamp()
        });

        const savedDoc = await historyRef.get();
        const savedData = savedDoc.data();
        const realTimestamp = savedData.time;

        await db.collection('messages_chayenne').doc('latest').set({
          message: text,
          emoji: selectedEmoji,
          time: realTimestamp
        });

        input.value = "";
        sentMsg.textContent = "Sent!";
        sentMsg.classList.add("visible");
        releaseButterflies();
        loadHistory();

        setTimeout(() => {
          sentMsg.classList.remove("visible");
        }, 2000);
      } catch (err) {
        sentMsg.textContent = "Error: " + err.message;
        sentMsg.classList.add("visible");
      }
    }

    async function loadHistory() {
      const historyDiv = document.getElementById('history');
      historyDiv.innerHTML = "<h3>üìú Past Messages</h3>";

      const snapshot = await db.collection('messages_chayenne')
        .orderBy('time', 'desc')
        .limit(20)
        .get();

      const seen = new Set();

      snapshot.forEach(doc => {
        const data = doc.data();
        const msg = data.message;
        const emoji = data.emoji || "üíå";
        const time = data.time?.toDate();

        let formatted = "No timestamp";
        if (time) {
          const day = time.getDate();
          const month = time.toLocaleString('default', { month: 'long' });
          const hours = time.getHours();
          const minutes = time.getMinutes().toString().padStart(2, '0');
          formatted = `${day} ${month}, at ${hours}:${minutes}`;
        }

        const uniqueKey = msg + formatted;
        if (!seen.has(uniqueKey)) {
          seen.add(uniqueKey);
          const item = document.createElement("div");
          item.innerHTML = `${emoji} ${msg}<br><small style="opacity: 0.8;">${formatted}</small>`;
          historyDiv.appendChild(item);
        }
      });
    }

    function releaseButterflies() {
      const count = 100;
      for (let i = 0; i < count; i++) {
        const butterfly = document.createElement('div');
        butterfly.className = 'butterfly';
        butterfly.textContent = 'ü¶ã';
        butterfly.style.left = `${Math.random() * 100}vw`;
        butterfly.style.top = `${Math.random() * 100}vh`;
        const size = Math.random() * 20 + 20;
        butterfly.style.fontSize = `${size}px`;
        const duration = Math.random() * 5 + 3;
        const delay = Math.random() * 2;
        butterfly.style.animation = `fadeFloat ${duration}s ease-in-out ${delay}s forwards`;
        document.body.appendChild(butterfly);
        setTimeout(() => {
          butterfly.remove();
        }, (duration + delay) * 1000);
      }
    }

    window.onload = () => {
      loadHistory();
      const emojiContainer = document.querySelector('#emojiPicker div');
      const emojis = emojiContainer.querySelectorAll("span");
      emojis.forEach(emoji => {
        emoji.onclick = () => {
          selectedEmoji = emoji.textContent;
          emojis.forEach(e => e.classList.remove("selected"));
          emoji.classList.add("selected");
        };
      });
      emojis[0]?.classList.add("selected");
    };
  </script>
</head>

<body>
  <div class="card">
    <h1>üíå Send a Message ü¶ã</h1>
    <input id="msgInput" type="text" placeholder="What do you wanna say?" />

    <div id="emojiPicker">
      <span>Select mood:</span>
      <div>
        <span>üßú‚Äç‚ôÄÔ∏è</span>
        <span>ü¶ã</span>
        <span>ü§™</span>
        <span>üéâ</span>
        <span>‚ù§Ô∏è‚Äçüî•</span>
        <span>üëÄ</span>
        <span>‚ùó</span>
      </div>
    </div>

    <button onclick="sendMessage()">Send</button>
    <div id="sentMsg"></div>
  </div>

  <div id="historyContainer">
    <div id="history"></div>
  </div>
</body>
</html>